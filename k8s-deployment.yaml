# TruckPort Enterprise Deployment Configuration
# Kubernetes deployment manifests for production

apiVersion: v1
kind: Namespace
metadata:
  name: truckport-production
  labels:
    name: truckport-production
    environment: production

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: truckport-frontend
  namespace: truckport-production
  labels:
    app: truckport-frontend
    tier: frontend
    environment: production
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: truckport-frontend
  template:
    metadata:
      labels:
        app: truckport-frontend
        tier: frontend
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - truckport-frontend
              topologyKey: kubernetes.io/hostname
      containers:
      - name: truckport-frontend
        image: truckport:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        env:
        - name: NODE_ENV
          value: "production"
        - name: API_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: truckport-config
              key: api-base-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: truckport-secrets
              key: redis-url
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: ssl-certs
          mountPath: /etc/nginx/ssl
          readOnly: true
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: ssl-certs
        secret:
          secretName: ssl-certificates

---
apiVersion: v1
kind: Service
metadata:
  name: truckport-frontend-service
  namespace: truckport-production
  labels:
    app: truckport-frontend
    tier: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
  selector:
    app: truckport-frontend

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: truckport-ingress
  namespace: truckport-production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/enable-brotli: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "DENY" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
spec:
  tls:
  - hosts:
    - truckport.com
    - www.truckport.com
    - api.truckport.com
    secretName: truckport-tls
  rules:
  - host: truckport.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: truckport-frontend-service
            port:
              number: 80
  - host: www.truckport.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: truckport-frontend-service
            port:
              number: 80

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: truckport-config
  namespace: truckport-production
data:
  api-base-url: "https://api.truckport.com"
  redis-cache-ttl: "3600"
  max-upload-size: "100M"
  rate-limit: "100"

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: truckport-frontend-hpa
  namespace: truckport-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: truckport-frontend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: truckport-frontend-pdb
  namespace: truckport-production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: truckport-frontend

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: truckport-network-policy
  namespace: truckport-production
spec:
  podSelector:
    matchLabels:
      app: truckport-frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
