name: CI Build (inject env from secrets)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate environment files from Secrets
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
        run: |
          mkdir -p src/environments
          cat > src/environments/environment.ts <<EOF
          export const environment = {
            production: false,
            googleMapsApiKey: "${GOOGLE_MAPS_API_KEY}",
            firebase: {
              apiKey: "${FIREBASE_API_KEY}",
              authDomain: "${FIREBASE_AUTH_DOMAIN}",
              databaseURL: "${FIREBASE_DATABASE_URL}",
              projectId: "${FIREBASE_PROJECT_ID}",
              storageBucket: "${FIREBASE_STORAGE_BUCKET}",
              messagingSenderId: "${FIREBASE_MESSAGING_SENDER_ID}",
              appId: "${FIREBASE_APP_ID}",
              measurementId: "${FIREBASE_MEASUREMENT_ID}"
            }
          };
          EOF

          cat > src/environments/environment.prod.ts <<EOF
          export const environment = {
            production: true,
            googleMapsApiKey: "${GOOGLE_MAPS_API_KEY}",
            firebase: {
              apiKey: "${FIREBASE_API_KEY}",
              authDomain: "${FIREBASE_AUTH_DOMAIN}",
              databaseURL: "${FIREBASE_DATABASE_URL}",
              projectId: "${FIREBASE_PROJECT_ID}",
              storageBucket: "${FIREBASE_STORAGE_BUCKET}",
              messagingSenderId: "${FIREBASE_MESSAGING_SENDER_ID}",
              appId: "${FIREBASE_APP_ID}",
              measurementId: "${FIREBASE_MEASUREMENT_ID}"
            }
          };
          EOF

      - name: Verify env files created
        run: |
          echo "files in src/environments:"
          ls -la src/environments

      - name: Build production
        run: npm run build:prod

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
